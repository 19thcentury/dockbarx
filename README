===========
DESCRIPTION
===========
This is a branch - not a fork - of DockBar (a TaskBar with grouping and group manipulation) with some extra features added. 


Dockbar is made by Aleksey Shaferov. 
DockbarX branch is developed by Matias Särs.
The button image used in "Default" and "New" themes are is made by Sami Rissanen (st6). 
"Human Bar" theme is made by bigRZA.
Dockbar and DockbarX are licensed under GPL3.



=======
INSTALL
=======

1. install python-gnome2-desktop and python-numpy (DockbarX might be able to run without python-numpy, but it shouldn't hurt). For previews libgtk2.0-0, libgx11-6 and libxcomposite1 needs to be installed (if they aren't already).
$ sudo apt-get install python-gnome2-desktop python-numpy

2. copy dockbarx.py and dbx_preference.py to /usr/bin/ and GNOME_DockBarXApplet.server to /usr/lib/bonobo/servers (64-bit users on mandriva and possibly other rpm-based distributions should use /usr/lib64 instead of /usr/lib)
$ sudo cp dockbarx.py /usr/bin
$ sudo cp dbx_preference.py /usr/bin
$ sudo cp GNOME_DockBarXApplet.server /usr/lib/bonobo/servers

3. copy the content of themes folder to /usr/share/dockbarx/themes (for system wide installation, recommended) or ~/.dockbarx/themes (Create the folders if necessary)
$ sudo mkdir -p /usr/share/dockbarx/themes
$ sudo cp  themes/* /usr/share/dockbarx/themes

4. add DockBarX applet to panel

You can ALSOrun it in window (meant for debugging purposes, mostly):
$dockbarx.py run-in-window

INSTALL IN AWN

Note Dockbarx for awn works only with older versions of AWN!
1. Do a normal install (no need to add dockbarx to panel if you don't want to, of course).
2. Copy everything from the AWN folder to ~/.config/awn/applets
3. Remove original taskbar/launcher applet from awn (optional, but recommended)
4. Set 'Icon offset' parameter to 0!
5. Restart AWN
6. Add DockBar applet


=====
USAGE
=====
The default actions are listed here. There are more actions in dockbarx. You can assign them to different buttons via preference dialog.

DEFAULT WINDOW BUTTON ACTIONS:
left click:
- activate / minimize / unminimize

middle click:
- close window

right click:
- minimize and lock


DEFAULT GROUP BUTTON ACTIONS:
left click:
- activate / minimize / unminimize group (launch application if no window is open)

shift + left click:
- launch application

middle double click:
- close group of windows

right click:
- open 'menu'

scroll up/down: 
- Select next/previous window of the group



LAUNCHERS:
Add launchers:
You can add launchers in two ways. 
1) Drag a icon from gnome-menu and drop it on dockbarx (that means on an existing icon in dockbarx, otherwise you just make a normal panel launcher). 
2) Right click on a group button and choose "pin application". (That option does only exist for applications which are correctly indentified by dockbarx. If it doesn't use the first method instead.)

In versions previous to x.0.24.0 you had to enter the resource class name of the application when you added a launcher. This isn't necessary anymore since dockbarx is now guessing it. Dockbarx fails to guess in some circumstances, though. You notice this when the windows of a program opens a new group button instead of using the launcher button. To fix this you need to manually edit the resource class name by right clicking the launcher and choosing "Edit Resource name".

Remove launcher:
Right click on the launcher you wish to remove. Choose 'Unpin application' from the menu. 

Move launchers (and other group buttons):
Drag and drop ;)



WORKSPACE/VIEWPORT BEHAVIOR OPTIONS:
You can change how DockBar reacts when you select a group (left click on the group icon if the default is used) from preference window.

Ignore: Acts as if windows on other workspaces and viewport doesn't exist.

Switch: Behaves as ignore if there are windows belonging to the group on the current workspace/viewport. If there are no windows belonging to the group on the current workspace/viewport it switches to the workspace/viewport with most windows that belong to the group. This is the default behavior.

Move: Moves windows from other workspaces/viewports to current workspace/viewport. This is the behavior vanilla Dockbar uses.

If you select a window in the popup list you will always switch to the workspace/viewport of the window. This is not configurable (vanilla Dockbar behaves the same way).


===
FAQ
===
Q: I added a new launcher for program X but when I click on the launcher a new groupbutton is made for the window instead of using the groupbutton of the launcher. What went wrong?
A: Dockbarx connects group buttons and windows by using the resource class name of the application. When a launcher is added dockbarx tries to guess the resource class name of that launcher. This works in most cases but not always. Apparently it didn't work for your program X. To fix this, right click on the launcher for program X and choose "Edit Resource name" and enter the correct resource name. If the program is already running you should be able to find it's resource class name in the drop-down list.

Q: There is no menu option to pin program X, but there is one for program Y and Z. WTF?
A: Dockbarx wasn't able to identify program X correctly then. You can "pin" the program by dragging it's icon from the gnome menu instead. Oh, and you will probably have to enter the resource name manually as well (see previous question).

Q: I want to make a custom launcher. Is it possible?
A: Yes, it is. There are two ways.
1) You can change the launcher in gnome-menu (alt+F2 and type "alacarte"). Add the launcher by dragging it or - if it's an old launcher - right click Dockbarx's handle and choose "Update" for the changes to show. 
2) Drag the launcher from gnome-menu to a folder. Right click it, choose preference and change what you want there. Drag the launcher to dockbarx. Don't delete the launcher from the folder! 

Q: How do I get to preference dialog?
A: Right click the handle (the dots or lines to the left of dockbarx) to get a menu where you can choose the preference option. Viola! Sometimes though, you have to double right click the handle to get the menu. Don't ask me why - just do it.

Q: None of DockbarX's compiz stuff like "compiz scale" work. Why?
A: Make sure you enable the GLib extension in Compiz settings manager and that the compiz plugin dockbarx uses is activated as well. (e.g. for group button action "compiz scale" to work you need the scale plugin activated)

Q: What is Opacify and how do I get it to work?
A: Opacify is a way to find localize a window with dockbar. When opacify is on and you roll over a name in the window list with the mouse, all other windows will become transparent so that you easy can spot the window. To activate opacify you need to go to the appearance tab of the preference dialog and check in opacify checkbox. Opacify requires compiz fusion  and you need to activate the plugin Opacity, Brightness and Saturation in CompizConfig!

Q: How do I install a theme?
A: If you find a theme on the web that you like, copy the file (should be SOMETHING.tar.gz) to ~/.dockbarx/themes or /usr/share/dockbarx/themes. You change themes in the appearance tab of preference dialog. You might need to press the reload button before your newly installed theme shows up.

Q: How can I make an theme of my own?
A: Read Theming HOWTO. If you need help ask me (Matias Särs alias M7S) on gnome-look or at launchpad. I'm happy to help theme developers as much as I can.








